#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

typedef struct {
    char Placa[6];
} Caminhao;

typedef struct {
    int codigo;
    float loc_x,loc_y;
    Caminhao *caminhao;
    int n_caminhao;
} Filial;

typedef struct {
    float origem_x,origem_y;
    float destino_x,destino_y;
} Produto;

Caminhao remover_caminhao(Filial*filiais,int codigo_filial) {
    Caminhao caminhao_retornado = filiais[codigo_filial].caminhao[filiais[codigo_filial].n_caminhao-1];
    filiais[codigo_filial].n_caminhao -= 1;
    if (filiais[codigo_filial].n_caminhao == 0)
        filiais[codigo_filial].caminhao = NULL;
    else  
        filiais[codigo_filial].caminhao = (Caminhao *) realloc(filiais[codigo_filial].caminhao,filiais[codigo_filial].n_caminhao*sizeof(Caminhao));
    return caminhao_retornado;
}

Filial *cadastrar_filial(Filial *filiais,int *nfiliais) {
    *nfiliais += 1;
    filiais = (Filial *) realloc(filiais,(*nfiliais)*sizeof(Filial));
    filiais[*nfiliais-1].codigo = *nfiliais - 1;
    printf("Digite a localização em x:");
    scanf("%f",&filiais[*nfiliais-1].loc_x);
    printf("Digite a localização em y:");
    scanf("%f",&filiais[*nfiliais-1].loc_y);
    filiais[*nfiliais-1].n_caminhao = 0;
    filiais[*nfiliais-1].caminhao = NULL;
    return filiais;
}

void cadastrar_caminhao(Filial *filiais, Caminhao caminhao, int codigo_filial) {
    filiais[codigo_filial].caminhao = (Caminhao *)realloc (filiais[codigo_filial].caminhao,(filiais[codigo_filial].n_caminhao+1) * sizeof(Caminhao));
    filiais[codigo_filial].caminhao[filiais[codigo_filial].n_caminhao] = caminhao;
    filiais[codigo_filial].n_caminhao++;
}

void realizar_entrega(Filial *filiais, Produto produto, int n_filiais) {
    int o_escolhido,d_escolhido;
    double distancia_menor;
    printf("Qual a origem do produto (x,y)?");
    scanf("%f %f",&produto.origem_x,&produto.origem_y);
    printf("Qual o destino do produto (x,y)?");
    scanf("%f %f",&produto.destino_x,&produto.destino_y);
    // Calculando a distancia das origens
    for (int i=0;i<n_filiais;i++){
        if (i==0){
            distancia_menor = sqrt(pow(filiais[i].loc_x - produto.origem_x,2) + pow(filiais[i].loc_y - produto.origem_y,2));
            o_escolhido = i;
        }
        else if (sqrt(pow(filiais[i].loc_x - produto.origem_x,2) + pow(filiais[i].loc_y - produto.origem_y,2)) < distancia_menor){
            distancia_menor = sqrt(pow(filiais[i].loc_x - produto.origem_x,2) + pow(filiais[i].loc_y - produto.origem_y,2));
            o_escolhido = i;
        }
    }
    // Calculando a distancia dos destinos
    for (int i = 0;i<n_filiais;i++){
        if (i == 0) {
            distancia_menor = sqrt(pow(filiais[i].loc_x - produto.destino_x,2) + pow(filiais[i].loc_y - produto.destino_y,2));
            d_escolhido = i;
        }
        else if (sqrt(pow(filiais[i].loc_x - produto.destino_x,2) + pow(filiais[i].loc_y - produto.destino_y,2)) < distancia_menor){
            distancia_menor = sqrt(pow(filiais[i].loc_x - produto.destino_x,2) + pow(filiais[i].loc_y - produto.destino_y,2));
            d_escolhido = i;
        }
    }
    cadastrar_caminhao(filiais,remover_caminhao(filiais,o_escolhido),d_escolhido);
}

 void imprimir_filiais(Filial *filiais, int n_filiais) {
    for (int i=0;i<n_filiais;i++) {
        printf("Filial %d\n",filiais[i].codigo);
        for (int j=0;j<filiais[i].n_caminhao;j++){
            printf("\tPlaca %d: %s\n",j+1,filiais[i].caminhao[j].Placa);
        }
        printf("\n");
    }
 }
int main() {
    int opcao=0,n_filiais=0,codigo=0;
    Filial *filiais = NULL;
    Caminhao caminhao;
    Produto produto;
    do {
        printf("\n ==================MENU==================\n");
        printf("[1] Cadastrar Filial\n[2] Cadastrar Caminhao\n[3] Realizar Entrega\n[4] Imprimir filiais\n[5] Sair\n");
        printf("Escolha uma das opções acima: ");
        scanf("%d",&opcao);
        switch (opcao) {
            case 1:
                filiais = cadastrar_filial(filiais,&n_filiais);
                break;
            case 2:
                printf("Digite o codigo da filial: ");
                scanf("%d",&codigo);
                printf("Qual a placa do caminhao cadastrado?");
                scanf(" %6[^\n]",caminhao.Placa);
                cadastrar_caminhao(filiais,caminhao,codigo);
                break;
            case 3:
                realizar_entrega(filiais,produto,n_filiais);
                break;
            case 4:
                imprimir_filiais(filiais,n_filiais);
                break;
        }
    } while (opcao != 5);
    return 0;
}
